public static void stampaArray(int[] vettore) {
		for (int elemento : vettore)
			System.out.print(elemento + " ");
		System.out.println();
	}


List<Integer> l1 = Arrays.asList(4, 3, 6, 7, 2, 1);
		System.out.println(l1);
		System.out.println();
		
		int[] v1 = { 3, 4, 7, 9, 1 };
		int[] v2 = { 3, 4, 7, 8, 1 }; // v2 è in anticipo rispetto a v1
		
		int ris = Arrays.compare(v1, v2); // =0 : vettori uguali, >0 : v2 anticipa v1, <0 : v1 anticipa v2  
		System.out.println(ris);
		System.out.println();
		
		int[] v3 = Arrays.copyOf(v1, 10);
		stampaArray(v3);
		System.out.println();
		
		boolean b1 = Arrays.equals(v1, v2);
		System.out.println(b1);
		System.out.println();
		
		Arrays.sort(v1);
		stampaArray(v1);
		System.out.println();
		
		//-------------------------------------------------
		
			int[] a = { 0, 2, 3, 4  }; // il vettore a è e DEVE essere ordinato
		
		int c = Arrays.binarySearch(a, 3); // restituisce 2
		int d = Arrays.binarySearch(a, 1); // insertion point: 1 ; f = -ip -1 = -1 -1 = -2
		int e = Arrays.binarySearch(a, 9); // insertion point: 4 ; f = -1p -1 = -4 -1 = -5
		
		System.out.println(c);
		System.out.println(d);	
		System.out.println(e);
		System.out.println();
		
		//----------------------------------------------------
		
			Persona p1 = new Persona("pippo", "pluto");
		Persona p2 = new Persona("minnie", "topolino");
		Persona p3 = new Persona("paperoga", "paperino");
		
		Persona[] a1 = { p1, p2, p3 };
		
		Arrays.sort(a1);
		System.out.println(Arrays.toString(a1));
		
		//----------------------------------------------------------
		
			List<Integer> l1 = new ArrayList<>();
		l1.add(7);
		l1.add(1);
		l1.add(2);
		l1.add(3);
		l1.add(2);
		System.out.println(l1);
		System.out.println();
		
		Iterator<Integer> it1 = l1.iterator();
		while (it1.hasNext()) {
			int elemento = it1.next();			
			if (elemento == 2)
				it1.remove();			
		}
		
		//-------------------------------------------------------------
		
			List<Integer> l1 = new ArrayList<>(); // 5 7 6 1 7 -------->
		l1.add(5);
		l1.add(7);
		l1.add(6);
		l1.add(1);
		l1.add(7);
		System.out.println(l1);
		
		ListIterator<Integer> iteratore = l1.listIterator();
		
		while (iteratore.hasNext()) {
			int elemento = iteratore.next();
			int indicePrecedente = iteratore.previousIndex();
			int indiceSuccessivo = iteratore.nextIndex();
			System.out.println("elemento: " + elemento + ", indice precedente: " + indicePrecedente + ", indice successivo: " + indiceSuccessivo);
		}
		
		System.out.println(l1);
		
		//--------------------------------------------
		
			Elenco<String> e1 = new Elenco<>();
		e1.aggiungiElemento("pippo");
		e1.aggiungiElemento("paperino");
		e1.aggiungiElemento("pluto");
		e1.aggiungiElemento("topolino");
		
		for (String elemento : e1) {
			System.out.println(elemento);
		}
		
		//-----------------------------------
		
		public class Elenco<T> implements Iterable<T> {
	
	private List<T> listaInterna;
	
	public Elenco() {
		listaInterna = new ArrayList<T>();
	}
	
	public void aggiungiElemento(T elemento) {
		listaInterna.add(elemento);
	}
	
	@Override
	public Iterator<T> iterator() {
		return listaInterna.iterator();
	}